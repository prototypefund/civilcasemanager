<.header class=" flex-wrap mb-4" action_class="!flex-initial flex-wrap">
  All Cases
  <:actions>
    <div class="w-full flex flex-row justify-between gap-y-2">
      <.link :if={@current_user.role != :readonly} class="mt-2" patch={~p"/cases/new"}>
        <.button>Open New Case</.button>
      </.link>
    </div>
  </:actions>
</.header>
<%= if assigns[:meta] do %>
  <.filter_form
    fields={[
      name: [
        label: "Identifier",
        op: :ilike_and,
        type: "text",
        rest: [
          placeholder: gettext("Identifier")
        ]
      ],
      status: [
        label: "Status",
        type: "select",
        prompt: "Status",
        options: Ecto.Enum.values(CaseManager.Cases.Case, :status)
      ],
      occurred_at: [
        label: "Occurred After",
        type: "datetime-local",
        op: :>=,
        allow_nil: true
      ],
      occurred_at: [
        label: "Occurred Before",
        type: "datetime-local",
        op: :<=,
        allow_nil: true
      ],
      outcome: [
        label: "Outcome",
        type: "select",
        prompt: "",
        options: Ecto.Enum.values(CaseManager.Cases.Case, :outcome)
      ],
      actors_involved: [
        label: "Actors Involved",
        op: :ilike_and,
        type: "text",
        rest: [
          placeholder: gettext("Actors Involved")
        ]
      ]
    ]}
    meta={@meta}
    id="user-filter-form"
    class="w-full mb-10"
  />
<% end %>
<h2 class="text-xl font-semibold leading-8 text-zinc-800 dark:text-zinc-200 mb-8">
  Listing <%= @meta.total_count %> Cases
</h2>
<div phx-hook="ParentMount" id="cases" class="grid gap-4" phx-update="stream">
  <%= for {id, group} <- @streams.cases do %>
    <div id={id} class="col-span-full">
      <h2 class="text-lg font-semibold mb-2"><%= key_to_string(group.id) %></h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 gap-4">
        <%= for case <- group.case_list do %>
          <.card id={"cases-#{case.id}"} phx-click={JS.navigate(~p"/cases/#{case}")}>
            <:icon>
              <.status_icon status={case.status} class="w-4 h-4" />
            </:icon>
            <:title>
              <a href={~p"/cases/#{case}"} class="">
                <%= Cases.get_pretty_identifier(case) %>
              </a>
            </:title>
            <:tag>
              <%= if Cases.get_pretty_status(case) do %>
                <.tag_badge color={get_color_for_status(case.status)}>
                  <%= Cases.get_pretty_status(case) %>
                </.tag_badge>
              <% end %>
              <%= if Cases.get_year(case) do %>
                <.tag_badge color={get_color_for_year_tag(case)}>
                  <%= Cases.get_year(case) %>
                </.tag_badge>
              <% end %>
            </:tag>
            <:timestamp>
              <.timestamp timestamp={case.occurred_at || case.created_at} />
            </:timestamp>
            <:actions>
              <.link :if={@current_user.role != :readonly} patch={~p"/cases/#{case}/edit"}>
                <%= gettext("Edit Case") %>
              </.link>
              <.link
                :if={@current_user.role != :readonly}
                class="block"
                phx-click={JS.push("delete", value: %{id: case.id}) |> hide("#cases-#{case.id}")}
                data-confirm="Are you sure? This will delete the case including all positions"
              >
                <%= gettext("Delete Case") %>
              </.link>
            </:actions>
            <%= if case.notes != nil do %>
              <%= String.slice(case.notes, 0, 400) <>
                if String.length(case.notes) > 400, do: "...", else: "" %>
            <% end %>
          </.card>
        <% end %>
      </div>
    </div>
  <% end %>
</div>

<Flop.Phoenix.pagination
  :if={@live_action in [:index]}
  opts={pagination_opts()}
  meta={@meta}
  path={~p"/cases"}
/>

<.modal :if={@live_action in [:new, :edit]} id="case-modal" show on_cancel={JS.patch(~p"/cases")}>
  <.live_component
    module={CaseManagerWeb.CaseForm}
    id={@case.id || :new}
    title={@page_title}
    action={@live_action}
    case={@case}
    current_user={@current_user}
    patch={~p"/cases"}
    validate_now={false}
    flash_copy={@flash}
  />
</.modal>
